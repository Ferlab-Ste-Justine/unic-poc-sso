apiVersion: v1
kind: PersistentVolume
metadata:
  name: jupyter
spec:
  accessModes:
    - ReadWriteMany
  capacity:
    storage: 2Gi
  hostPath:
    path: /data/jupyter
  storageClassName: standard
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jupyter
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
  volumeName: jupyter
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: jupyter
  labels:
    app: jupyter
    role: service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jupyter
      role: service
  serviceName: jupyter
  template:
    metadata:
      annotations:
        vault.hashicorp.com/agent-inject: 'true'
        vault.hashicorp.com/role: 'internal-app'
        vault.hashicorp.com/agent-inject-secret-database-config.txt: 'internal/data/database/config'
        vault.hashicorp.com/agent-inject-status: 'update'
        vault.hashicorp.com/secret-volume-path-database-config.txt: "/etc/test"
        vault.hashicorp.com/agent-inject-file-database-config.txt: "test.txt"
        vault.hashicorp.com/agent-inject-template-database-config.txt: |
          {{- with secret "internal/data/database/config" -}}
          [toto]
          postgresql://{{ .Data.data.username }}:{{ .Data.data.password }}@postgres:5432/wizard
          {{- end -}}
      labels:
        app: jupyter
        role: service
    spec:
      serviceAccountName: user1
      initContainers:
        - name: volume-mount-hack
          image: busybox
          command: ["sh", "-c", "chown -R 1000:100 /home/jovyan"]
          volumeMounts:
            - name: jupyter
              mountPath: /home/jovyan
        - name: append-conf-default
          imagePullPolicy: Never
          image: ferlabcrsj/setup-spark-config
          volumeMounts:
            - name: conf-volume
              mountPath: /etc/output
            - name: spark-default
              mountPath: /etc/input
        - name: append-conf-spark-user
          imagePullPolicy: Never
          image: ferlabcrsj/setup-spark-config
          volumeMounts:
            - name: conf-volume
              mountPath: /etc/output
            - name: spark-user
              readOnly: true
              mountPath: /etc/input
        - name: append-conf-spark-secret
          imagePullPolicy: Never
          image: ferlabcrsj/setup-spark-config
          volumeMounts:
            - name: conf-volume
              mountPath: /etc/output
            - name: spark-secret
              readOnly: true
              mountPath: /etc/input

      containers:
        - name: jupyter
          image: jupyter/all-spark-notebook
          ports:
            - name: jupyter
              containerPort: 8888
          volumeMounts:
            - name: jupyter
              mountPath: /home/jovyan
            - name: minio-secret
              readOnly: true
              mountPath: "/home/jovyan/.aws"
            - name: spark-secret
              readOnly: true
              mountPath: "/etc/secret"
            - name: conf-volume
              readOnly: true
              mountPath: "/usr/local/spark-3.3.1-bin-hadoop3/conf"
      volumes:
        - name: minio-secret
          secret:
            secretName: minio-secret-user1
        - name: spark-secret
          secret:
            secretName: spark-secret-user1
        - name: jupyter
          persistentVolumeClaim:
            claimName: jupyter
        - name: spark-default
          configMap:
            name: spark-defaults
        - name: spark-user
          configMap:
            name: spark-user1
        - name: conf-volume
          emptyDir:
            sizeLimit: 1Mi
---
apiVersion: v1
kind: Service
metadata:
  name: jupyter
  labels:
    app: jupyter
    role: service
spec:
  selector:
    app: jupyter
    role: service
  type: NodePort
  ports:
    - name: jupyter
      port: 8888
      targetPort: 8888
      protocol: TCP
    - name: driver
      port: 2222
      protocol: TCP
    - name: blockmanager
      port: 7777
      protocol: TCP
